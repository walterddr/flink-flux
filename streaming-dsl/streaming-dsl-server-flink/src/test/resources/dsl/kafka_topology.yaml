# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "kafka-topology"

components:
  kafka-config:
    className: "com.uber.athena.dsl.planner.flink.test.utils.datastream.kafka.KafkaConfig"
    constructorArgs:
      - ["localhost:9092"] # broker list
      - ["localhost:2181"] # zookeeper list
      - { # properties
          "auto.offset.reset": "earliest" # override to read from earliest
        }
  string-serde:
    className: "com.uber.athena.dsl.planner.flink.test.utils.datastream.kafka.StringSerDeSchema"

# topology configuration
# this will be passed to the submitter as a map of config options
#
config:
  topology.workers: 1
  # ...

vertices:
  kafka-source:
    id: "kafka-source"
    className: "com.uber.athena.dsl.planner.flink.test.utils.datastream.kafka.KafkaSource"
    constructorArgs:
      - "input-topic"
      - ref: "string-serde"
      - ref: "kafka-config"

  operator-1:
    id: "operator-1"
    className: "com.uber.athena.dsl.planner.flink.test.utils.datastream.BasicPassThroughProcessFunction"
    parallelism: 1

  sink-1:
    id: "kafka-sink"
    className: "com.uber.athena.dsl.planner.flink.test.utils.datastream.kafka.KafkaSink"
    parallelism: 1
    constructorArgs:
      - "output-topic"
      - ref: "string-serde"
      - ref: "kafka-config"

streams:
  - id: "kafka-source --> operator-1"
    fromVertex: "kafka-source"
    toVertex: "operator-1"

  - id: "operator-1 --> kafka-sink"
    fromVertex: "operator-1"
    toVertex: "kafka-sink"