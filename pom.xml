<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>org.apache.flink</groupId>
	<artifactId>flink-storm</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<repositories>
		<!-- This repository is needed as a stable source for some Clojure libraries -->
		<repository>
			<id>clojars</id>
			<url>https://clojars.org/repo/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<properties>
		<flink.version>1.7.2</flink.version>
		<scala.version>2.11.12</scala.version>
		<scala.binary.version>2.11</scala.binary.version>
	</properties>

	<modules>
		<module>flink-storm-core</module>
		<module>flink-storm-flux</module>
	</modules>

	<dependencyManagement>
		<dependencies>

			<!-- core dependencies -->

			<!-- Together with the dependency management section in flink-parent, this
                pins the Kryo version of transitive dependencies to the Flink Kryo version -->
			<dependency>
				<groupId>com.esotericsoftware.kryo</groupId>
				<artifactId>kryo</artifactId>
				<version>2.24.0</version>
			</dependency>

			<!-- Core streaming API -->
			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-streaming-java_${scala.binary.version}</artifactId>
				<version>${flink.version}</version>
			</dependency>

			<!-- we only need the Apache Storm API, not all the runtime and web UI functionality,
                so we exclude many of the unnecessary and possibly conflicting dependencies -->
			<dependency>
				<groupId>org.apache.storm</groupId>
				<artifactId>storm-core</artifactId>
				<version>1.0.0</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>log4j-over-slf4j</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.apache.logging.log4j</groupId>
						<artifactId>log4j-slf4j-impl</artifactId>
					</exclusion>
					<exclusion>
						<artifactId>slf4j-log4j12</artifactId>
						<groupId>org.slf4j</groupId>
					</exclusion>
					<exclusion>
						<groupId>javax.servlet</groupId>
						<artifactId>servlet-api</artifactId>
					</exclusion>
					<exclusion>
						<groupId>junit</groupId>
						<artifactId>junit</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.mockito</groupId>
						<artifactId>mockito-all</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.mockito</groupId>
						<artifactId>mockito-all</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.apache.curator</groupId>
						<artifactId>curator-test</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.esotericsoftware</groupId>
						<artifactId>kryo</artifactId>
					</exclusion>
					<exclusion>
						<groupId>ring</groupId>
						<artifactId>ring-core</artifactId>
					</exclusion>
					<exclusion>
						<groupId>ring</groupId>
						<artifactId>ring-devel</artifactId>
					</exclusion>
					<exclusion>
						<groupId>ring</groupId>
						<artifactId>ring-servlet</artifactId>
					</exclusion>
					<exclusion>
						<groupId>ring</groupId>
						<artifactId>ring-jetty-adapter</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.mortbay.jetty</groupId>
						<artifactId>jetty</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.jgrapht</groupId>
						<artifactId>jgrapht-core</artifactId>
					</exclusion>
					<exclusion>
						<groupId>compojure</groupId>
						<artifactId>compojure</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.twitter</groupId>
						<artifactId>chill-java</artifactId>
					</exclusion>
					<exclusion>
						<groupId>commons-fileupload</groupId>
						<artifactId>commons-fileupload</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.servlet</groupId>
						<artifactId>servlet-api</artifactId>
					</exclusion>
					<exclusion>
						<groupId>clout</groupId>
						<artifactId>clout</artifactId>
					</exclusion>
					<exclusion>
						<groupId>hiccup</groupId>
						<artifactId>hiccup</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.apache.storm</groupId>
				<artifactId>flux-core</artifactId>
				<version>1.0.0</version>
			</dependency>

			<dependency>
				<groupId>com.googlecode.json-simple</groupId>
				<artifactId>json-simple</artifactId>
				<version>1.1</version>
			</dependency>

			<!-- test dependencies -->

			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.12</version>
			</dependency>

			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>1.10.19</version>
			</dependency>

			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-api-mockito</artifactId>
				<version>1.6.5</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-core</artifactId>
				<version>1.6.5</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-module-junit4</artifactId>
				<version>1.6.5</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-runtime_${scala.binary.version}</artifactId>
				<version>${flink.version}</version>
				<type>test-jar</type>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-streaming-java_${scala.binary.version}</artifactId>
				<version>${flink.version}</version>
				<scope>test</scope>
				<type>test-jar</type>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.6.0</version>
				<configuration>
					<compilerArgs>
						<arg>-Xlint:all</arg>
					</compilerArgs>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<!--plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.17</version>
				<executions>
					<execution>
						<id>checkstyle</id>
						<phase>validate</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<suppressionsLocation>dev-support/suppressions.xml</suppressionsLocation>
					<suppressionsFileExpression>checkstyle.suppressions.file</suppressionsFileExpression>
					<configLocation>dev-support/checkstyle.xml</configLocation>
					<logViolationsToConsole>true</logViolationsToConsole>
					<failOnViolation>true</failOnViolation>
					<includeTestSourceDirectory>true</includeTestSourceDirectory>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>7.7</version>
					</dependency>
				</dependencies>
			</plugin-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.0.2</version>
			</plugin>
			<!--plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.4.1</version>
				<executions>
					<execution>
						<id>dependency-convergence</id>
						<phase>install</phase>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<DependencyConvergence/>
							</rules>
							<fail>true</fail>
						</configuration>
					</execution>
					<execution>
						<id>default-cli</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<DependencyConvergence/>
							</rules>
							<fail>true</fail>
						</configuration>
					</execution>
				</executions>
			</plugin-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>2.5.2</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.0.2</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.2</version>
			</plugin>
		</plugins>
	</build>

</project>
