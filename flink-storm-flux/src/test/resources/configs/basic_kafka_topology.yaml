# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# YAML configuration to serve as a basic smoke test for what is supported.
#
# We should support comments, so if we've failed so far, things aren't good.

# we shouldn't choke if we see a document separator...
---

# topology definition
# name to be used when submitting
name: "yaml-topology"


# Components
# Components are analagous to Spring beans. They are meant to be used as constructor,
# property(setter), and builder arguments.
#
# for the time being, components must be declared in the order they are referenced
components:
- id: "stringScheme"
  className: "org.apache.storm.kafka.StringScheme"

- id: "stringMultiScheme"
  className: "org.apache.storm.spout.SchemeAsMultiScheme"
  constructorArgs:
  - ref: "stringScheme"

- id: "zkHosts"
  className: "org.apache.storm.kafka.ZkHosts"
  constructorArgs:
  - "localhost:2181"

- id: "spoutConfig"
  className: "org.apache.storm.kafka.SpoutConfig"
  constructorArgs:
  # brokerHosts
  - ref: "zkHosts"
  # topic
  - "myKafkaTopic"
  # zkRoot
  - "/kafkaSpout"
  # id
  - "myId"
  properties:
  - name: "ignoreZkOffsets"
    value: true
  - name: "scheme"
    ref: "stringMultiScheme"

# topology configuration
# this will be passed to the submitter as a map of config options
#
config:
  topology.workers: 1
  # ...

# spout definitions
spouts:
- id: "kafka-spout"
  className: "org.apache.storm.kafka.KafkaSpout"
  constructorArgs:
  - ref: "spoutConfig"

# bolt definitions
bolts:
- id: "console-bolt"
  className: "org.apache.flink.storm.flux.utils.ConsoleOutputBolt"
  parallelism: 4

#stream definitions
# stream definitions define connections between spouts and bolts.
# note that such connections can be cyclical
streams:
  - name: "kafka-spout --> console-bolt"   # name isn't used (placeholder for logging, UI, etc.)
    from: "kafka-spout"
    to: "console-bolt"
    grouping:
      type: SHUFFLE







